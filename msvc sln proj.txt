<<<<<<< HEAD
 * VC.db might contain startup and other solution-level information about project relationships (build dependencies?)
 * vcxproj.filters will need to be written by projects to map specific include files to source/header filters, IN ADDITION TO item group includes from .vcxproj

fundamental top-level vcxproj objects include:
 * <import ... "Cpp.targets", "Default.props", and "Cpp.props"/>
 * <itemgroup/>, including <clcompile/> and <projectconfigurations/>
 * <itemdefinitiongroup/>, including <link><additionaldependencies> (<clcompile/> appears to be optional; what about <subsystem/>?) for each 4 configurations
 * <propertygroup/>, including <usedebuglibraries/>, <platformtoolset/>, <includepath/> and <librarypath/> for each 4 configurations (<outdir/>?)
 * <propertygroup/> for globals, including <projectguid/> 

project may need to be more careful about path references
additional project settings need to be aligned with epic settings:
 * output (bin, lib), including configuration macros
 * intermediate (obj) including configuration macros
=======
 * VC.db might contain startup and other solution-level information about project relationships (build dependencies?)
 * vcxproj.filters will need to be written by projects to map specific include files to source/header filters, IN ADDITION TO item group includes from .vcxproj

fundamental top-level vcxproj objects include:
 * <import ... "Cpp.targets", "Default.props", and "Cpp.props"/>
 * <itemgroup/>, including <clcompile/> and <projectconfigurations/>
 * <itemdefinitiongroup/>, including <link><additionaldependencies> (<clcompile/> appears to be optional) for each 4 configurations
 * <propertygroup/>, including <usedebuglibraries/>, <platformtoolset/>, <includepath/> and <librarypath/> for each 4 configurations
 * <propertygroup/> for globals, including <projectguid/> 

>>>>>>> 558e3b2c336cffc08bc9764809c10badb753d495
